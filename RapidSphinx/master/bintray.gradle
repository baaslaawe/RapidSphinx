apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

ext {
    bintrayRepo = 'RapidSphinx'
    bintrayName = 'master'

    publishedGroupId = 'com.icaksama.rapidsphinx'
    libraryName = 'RapidSphinx'
    artifact = 'master'
    labels = ["rapidsphinx", "pocketsphinx", "cmusphinx", "rapidears"]

    libraryDescription = 'The basic program to use RapidSphinx library.'

    siteUrl = 'https://github.com/icaksama/RapidSphinx'
    gitUrl = 'https://github.com/icaksama/RapidSphinx.git'

    libraryVersion = '2.2.0'

    developerId = 'icaksama'
    developerName = 'Saiful Irham Wicaksana'
    developerEmail = 'icaksama@gmail.com'

    licenseName = 'MIT License'
    licenseUrl = 'https://github.com/icaksama/RapidSphinx/blob/master/LICENSE'
    allLicenses = ["MIT"]
}

group = publishedGroupId
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

version = libraryVersion
if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//        classpath += configurations.javadocDeps
    }
//    task javadoc(type: Javadoc) {
//        source = android.sourceSets.main.java.srcDirs
//    }
//    .doFirst {
//        classpath += fileTree(dir: "$buildDir/intermediates/exploded-aar/", include:"**/classes.jar")
//    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

tasks.withType(Javadoc).all {
    enabled = false
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}